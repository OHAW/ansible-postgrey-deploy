- name: PostgreSQL deploy
  hosts: all
  become: yes
  gather_facts: no
  vars:
    postgresql_version: '14'
    postgresql_dir: '/var/lib/postgresql/'
    value: 'log'
    db_name: test
    db_user: testuser
    db_password: testpassword

  tasks:

    # - name: repository configuration
    #   shell: echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list

    # - name: signing key
    #   shell: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

    
    - name: install postgresql package
      apt:
        name: '{{ item }}'
        state: present
      with_items:
        - 'postgresql-{{ postgresql_version }}'
        - libpq-dev
        - python3-psycopg2
        - acl

    - name: create user for test database
      user:
        name: '{{ db_user }}'
        state: present

    - name: create database
      community.postgresql.postgresql_db:
        name: '{{ db_name }}'
        encoding: UTF-8
        template: template0
      become_user: postgres

    - name: create database user
      community.postgresql.postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: grand database user
      community.postgresql.postgresql_privs:
        type: database
        database: '{{ db_name }}'
        roles: '{{ db_user }}'
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: create schema
      community.postgresql.postgresql_schema:
        db: '{{ db_name }}'
        name: test
        owner: '{{ db_user }}'
      become: yes
      become_user: postgres

    - name: create a new tablespace called acme and set bob as an its owner
      community.postgresql.postgresql_tablespace:
        state: present
        name: test
        owner: '{{ db_user }}'
        location: '{{ postgresql_dir }}{{ postgresql_version }}/main'
      become: yes
      become_user: postgres

    - name: Create table
      community.postgresql.postgresql_table:
        db: '{{ db_name }}'
        tablespace: test
        table: test_data
        columns:
        - numder int not null
        - somewords varchar unique not null
        owner: '{{ db_user }}'
      become: yes
      become_user: postgres

    - name: Push data
      copy:
        src: data.sql
        dest: /tmp/data.sql

    - name: Upload data
      community.postgresql.postgresql_script:
        db: '{{ db_name }}'
        path: /tmp/data.sql
      become: yes
      become_user: postgres